//
//  plotView.swift
//  mlDiagnostic
//
//  Created by Hunter Shen on 11/7/23.
//

import SwiftUI




struct PlotView: View {
    var byteArray1: [Double]
    
    @State private var animationProgress: CGFloat = 0
    
    let gridDivisions: Int = 4
    
    var body: some View {
        VStack {
            GeometryReader { geometry in
                ZStack {
//                    draw the grids
                    ForEach(0..<gridDivisions, id: \.self) { division in
                        Path { path in
                            let y = geometry.size.height / CGFloat(gridDivisions) * CGFloat(division)
                            path.move(to: CGPoint(x: 0, y: y))
                            path.addLine(to: CGPoint(x: geometry.size.width, y: y))
                        }
                        .stroke(Color.gray.opacity(0.5), lineWidth: 0.5)
                    }
                    ForEach(0..<gridDivisions, id: \.self) { division in
                        Path { path in
                            let x = geometry.size.width / CGFloat(gridDivisions) * CGFloat(division)
                            path.move(to: CGPoint(x: x, y: 0))
                            path.addLine(to: CGPoint(x: x, y: geometry.size.height))
                        }
                        .stroke(Color.gray.opacity(0.5), lineWidth: 0.5)
                    }
//                    draw the plot

                        LineChartShape(points: byteArray1, animatableData: animationProgress, type: .lineChart)
                            .stroke(Color.pink, lineWidth: 3)
// draw peak compliance
                        LineChartShape(points: byteArray1, animatableData: animationProgress, type: .verticalLine)
                            .stroke(Color.red, lineWidth: 2)
// draw compliance at max pressure
                        LineChartShape(points: byteArray1, animatableData: animationProgress, type: .horizontalLine)
                            .stroke(Color.green, lineWidth: 2)
                    // Y-axis
                    Path { path in
                        let height = geometry.size.height
                        path.move(to: CGPoint(x: 0, y: 0))
                        path.addLine(to: CGPoint(x: 0, y: height))
                    }
                    .stroke(Color.black, lineWidth: 1)
                    
                    // X-axis
                    Path { path in
                        let width = geometry.size.width
                        path.move(to: CGPoint(x: 0, y: geometry.size.height))
                        path.addLine(to: CGPoint(x: width, y: geometry.size.height))
                    }
                    .stroke(Color.black, lineWidth: 1)
                    
                }
                .onAppear {
                    withAnimation(.linear(duration: 2)) {
                        animationProgress = 1
                    }
                }
            }
        }
        .padding()
        .overlay(
//            label for y axis
            VStack {
                ForEach((0...gridDivisions).reversed(), id: \.self) { i in
                    Spacer()
                    if i != 0 {
                        let labelValue = Double(i) / Double(gridDivisions) * 2
                        Text(String(format: "%.2f", labelValue))
                            .font(.caption)
                            .offset(x:20,y:-20)
                    }
                }
            }, alignment: .leading
        )
        .overlay(
            //            label for x axis
            HStack {
                ForEach((0...gridDivisions), id: \.self) { i in
                    Spacer()
                    Text("\(i * byteArray1.count / gridDivisions - 400)").font(.caption)
                        .frame(maxWidth: .infinity)
                }
            }, alignment: .bottom
        )
        //        .border(Color.gray)
    }
}

struct PlotView_Previews: PreviewProvider {
    static var previews: some View {
        //        PlotView(byteArray: [1,2,3,4,1,5,6,7,89,2,3,2,212,4,2])
        //            .frame(height: 300)
        let array1 :[Double] = [0.7696470152098254, 0.7701976126900674, 0.7707485905775996, 0.7712999526691471, 0.7718517028086902, 0.7724038448881678, 0.7729563828481951, 0.773509320678792, 0.7740626624201257, 0.774616412163265, 0.7751705740509491, 0.7757251522783688, 0.7762801510939621, 0.7768355748002236, 0.7773914277545281, 0.7779477143699698, 0.7785044391162148, 0.7790616065203699, 0.7796192211678671, 0.780177287703363, 0.7807358108316551, 0.7812947953186149, 0.7818542459921362, 0.7824141677431031, 0.7829745655263736, 0.7835354443617812, 0.7840968093351561, 0.7846586655993639, 0.7852210183753636, 0.7857838729532853, 0.7863472346935273, 0.7869111090278744, 0.7874755014606352, 0.7880404175698028, 0.7886058630082351, 0.7891718435048578, 0.789738364865891, 0.7903054329760966, 0.7908730538000509, 0.7914412333834413, 0.792009977854386, 0.7925792934247797, 0.7931491863916658, 0.7937196631386321, 0.794290730137236, 0.7948623939484558, 0.7954346612241691, 0.7960075387086609, 0.7965810332401605, 0.7971551517524076, 0.7977299012762494, 0.7983052889412684, 0.7988813219774427, 0.799458007716837, 0.8000353535953295, 0.8006133671543699, 0.8011920560427747, 0.8017714280185549, 0.8023514909507843, 0.8029322528214999, 0.8035137217276445, 0.804095905883045, 0.8046788136204334, 0.8052624533935044, 0.8058468337790193, 0.8064319634789481, 0.8070178513226575, 0.8076045062691428, 0.8081919374093053, 0.8087801539682756, 0.809369165307786, 0.8099589809285895, 0.8105496104729313, 0.8111410637270686, 0.8117333506238452, 0.8123264812453177, 0.8129204658254373, 0.8135153147527876, 0.8141110385733797, 0.8147076479935063, 0.8153051538826551, 0.8159035672764854, 0.8165028993798659, 0.8171031615699789, 0.8177043653994893, 0.8183065225997825, 0.8189096450842707, 0.8195137449517711, 0.820118834489957, 0.8207249261788828, 0.8213320326945868, 0.8219401669127704, 0.8225493419125609, 0.8231595709803524, 0.8237708676137355, 0.8243832455255093, 0.8249967186477865, 0.8256113011361845, 0.8262270073741148, 0.8268438519771637, 0.8274618497975735, 0.8280810159288232, 0.8287013657103128, 0.8293229147321526, 0.8299456788400615, 0.8305696741403761, 0.8311949170051743, 0.8318214240775154, 0.8324492122768007, 0.8330782988042568, 0.8337087011485462, 0.8343404370915065, 0.8349735247140235, 0.8356079824020409, 0.8362438288527099, 0.8368810830806828, 0.8375197644245553, 0.8381598925534594, 0.8388014874738126, 0.8394445695362277, 0.8400891594425861, 0.8407352782532799, 0.8413829473946284, 0.8420321886664717, 0.842683024249947, 0.8433354767154547, 0.843989569030815, 0.8446453245696245, 0.8453027671198177, 0.8459619208924353, 0.8466228105306104, 0.847285461118775, 0.8479498981920948, 0.8486161477461369, 0.849284236246779, 0.8499541906403665, 0.8506260383641224, 0.8512998073568204, 0.8519755260697268, 0.8526532234778187, 0.853332929091287, 0.8540146729673336, 0.8546984857222688, 0.8553843985439197, 0.8560724432043567, 0.8567626520729507, 0.8574550581297662, 0.8581496949793046, 0.8588465968646042, 0.8595457986817099, 0.8602473359945237, 0.8609512450500457, 0.8616575627940173, 0.8623663268869812, 0.863077575720768, 0.8637913484354234, 0.8645076849365889, 0.8652266259133516, 0.8659482128565732, 0.8666724880777185, 0.8673994947281936, 0.8681292768192133, 0.8688618792422109, 0.8695973477898111, 0.8703357291773778, 0.871077071065162, 0.8718214220810615, 0.8725688318440176, 0.8733193509880637, 0.8740730311870512, 0.8748299251800702, 0.8755900867975905, 0.8763535709883427, 0.8771204338469663, 0.8778907326424465, 0.878664525847369, 0.879441873168014, 0.8802228355753228, 0.8810074753367597, 0.881795856049104, 0.8825880426721974, 0.8833841015636832, 0.8841841005147659, 0.8849881087870289, 0.8857961971503423, 0.8866084379218997, 0.8874249050064204, 0.8882456739375577, 0.8890708219205522, 0.8899004278761743, 0.8907345724859983, 0.8915733382390553, 0.8924168094799095, 0.8932650724582107, 0.8941182153797697, 0.8949763284592135, 0.8958395039742719, 0.8967078363217552, 0.8975814220752794, 0.8984603600448036, 0.8993447513380407, 0.9002346994238095, 0.9011303101973963, 0.9020316920479984, 0.9029389559283222, 0.9038522154264175, 0.9047715868398225, 0.9056971892521083, 0.9066291446119074, 0.907567577814518, 0.9085126167861761, 0.9094643925710962, 0.9104230394213796, 0.9113886948898986, 0.9123614999262659, 0.9133415989760029, 0.9143291400830272, 0.9153242749955861, 0.9163271592757594, 0.9173379524126722, 0.9183568179395553, 0.9193839235547983, 0.9204194412471505, 0.9214635474252245, 0.9225164230514699, 0.9235782537807884, 0.9246492301039693, 0.9257295474961315, 0.9268194065703673, 0.9279190132367905, 0.9290285788671995, 0.9301483204655757, 0.9312784608446468, 0.9324192288087558, 0.9335708593432812, 0.9347335938108733, 0.9359076801547738, 0.9370933731095052, 0.9382909344192216, 0.93950063306403, 0.9407227454946047, 0.9419575558754267, 0.9432053563369984, 0.9444664472374001, 0.9457411374335628, 0.9470297445626614, 0.9483325953340349, 0.9496500258320698, 0.9509823818304936, 0.9523300191185531, 0.9536933038395605, 0.9550726128423274, 0.9564683340460097, 0.9578808668189327, 0.9593106223719641, 0.960758024167051, 0.9622235083415468, 0.9637075241489892, 0.9652105344170154, 0.9667330160231349, 0.9682754603891005, 0.9698383739946632, 0.971422278911519, 0.9730277133582967, 0.9746552322774659, 0.9763054079350844, 0.977978830544344, 0.9796761089139074, 0.9813978711220753, 0.9831447652178598, 0.9849174599500887, 0.9867166455257053, 0.9885430343984755, 0.9903973620893591, 0.9922803880398574, 0.9941928964996847, 0.9961356974501735, 0.9981096275648678, 1.0001155512088087, 1.0021543614780724, 1.0042269812811664, 1.0063343644639473, 1.0084774969797656, 1.0106573981066063, 1.0128751217130239, 1.0151317575747383, 1.0174284327437801, 1.0197663129721395, 1.0221466041918832, 1.0245705540537615, 1.027039453526334, 1.0295546385576795, 1.0321174918017466, 1.0347294444114263, 1.0373919779003962, 1.0401066260757756, 1.0428749770435868, 1.0456986752889577, 1.0485794238329236, 1.0515189864675882, 1.054519190071257, 1.05758192700501, 1.0607091575919678, 1.0639029126802697, 1.0671652962904865, 1.0704984883478517, 1.0739047474992824, 1.0773864140146923, 1.080945912771535, 1.084585756320878, 1.0883085480325543, 1.0921169853160866, 1.0960138629130807, 1.100002076255653, 1.104084624884166, 1.1082646159160574, 1.1125452675558662, 1.1169299126346512, 1.121422002164812, 1.1260251088938817, 1.130742930838065, 1.1355792947731718, 1.1405381596570567, 1.1456236199537042, 1.1508399088246293, 1.1561914011482681, 1.1616826163224125, 1.1673182207984925, 1.1731030302895025, 1.1790420115855895, 1.1851402839026441, 1.1914031196796293, 1.1978359447297222, 1.2044443376385703, 1.2112340282899807, 1.218210895385083, 1.2253809628053351, 1.2327503946526244, 1.2403254887810427, 1.2481126686146677, 1.2561184730237602, 1.264349544008246, 1.2728126119121332, 1.2815144778657235, 1.2904619931241894, 1.2996620349415233, 1.3091214785882275, 1.3188471650898257, 1.3288458642317924, 1.3391242323454735, 1.349688764359832, 1.3605457395764373, 1.3717011606012777, 1.3831606848483444, 1.3949295480183155, 1.4070124789533922, 1.419413605279007, 1.4321363492678358, 1.4451833134048573, 1.458556155198086, 1.4722554508725672, 1.4862805477101297, 1.5006294049594944, 1.5152984234461404, 1.5302822642643488, 1.5455736572404926, 1.5611632002217444, 1.5770391506719053, 1.593187211548473, 1.609590313992814, 1.6262283999859064, 1.6430782087995637, 1.66011307179667, 1.6773027208876696, 1.6946131167119354, 1.7120063033521826, 1.7294402970707148, 1.7468690171333459, 1.7642422672084574, 1.7815057760370385, 1.798601306003041, 1.8154668378294843, 1.8320368388253148, 1.8482426208604306, 1.8640127925153556, 1.8792738076227227, 1.8939506097024132, 1.9079673686367997, 1.9212483024207332, 1.9337185730761723, 1.9453052420057049, 1.9559382663682423, 1.9655515147133913, 1.9740837773387419, 1.9814797448602546, 1.9876909275082835, 1.9926764878333167, 1.9964039609158544, 1.9988498388362366, 2.0, 1.999349968774264, 1.997404996535305, 1.9941799613598938, 1.9896990898773126, 1.9839955108872243, 1.9771106559085534, 1.9690935265663523, 1.9599998524212374, 1.9498911653522637, 1.938833817857589, 1.9268979726609516, 1.914156589904351, 1.900684436127855, 1.8865571363884717, 1.8718502874766014, 1.8566386464800846, 1.8409954051388746, 1.8249915567191224, 1.8086953586708532, 1.7921718912365088, 1.7754827095269428, 1.7586855844182134, 1.7418343259554017, 1.7249786817606418, 1.7081643021934698, 1.6914327636507118, 1.674821641360848, 1.6583646232618827, 1.6420916569910804, 1.6260291226026664, 1.610200024314918, 1.5946241953274467, 1.579318510506914, 1.5642971024864556, 1.5495715774391545, 1.535151227453696, 1.521043237050823, 1.5072528819268198, 1.4937837184929386, 1.4806377631980774, 1.4678156609788098, 1.4553168424800518, 1.4431396699361672, 1.431281571801478, 1.419739166376508, 1.4085083747972573, 1.397584523844536, 1.3869624390937298, 1.3766365289666778, 1.3666008602705446, 1.3568492258171831, 1.3473752047134224, 1.3381722159006906, 1.329233565503486, 1.3205524885223552, 1.3121221853797096, 1.3039358537972805, 1.295986716453275, 1.2882680448361525, 1.2807731796810145, 1.2734955483443748, 1.2664286794438908, 1.259566215061761, 1.2529019207840768, 1.2464296938235897, 1.2401435694501433, 1.2340377259314514, 1.2281064881669568, 1.2223443301791226, 1.2167458766096602, 1.2113059033527598, 1.2060193374433479, 1.2008812563055984, 1.1958868864553431, 1.1910316017395275, 1.1863109211863951, 1.1817205065315446, 1.177256159477333, 1.1729138187362076, 1.168689556902374, 1.1645795771906857, 1.1605802100767015, 1.1566879098674656, 1.15289925122863, 1.1492109256900696, 1.145619738149037, 1.1421226033871645, 1.138716542615192, 1.1353986800571587, 1.1321662395839, 1.129016541404032, 1.1259469988191366, 1.122955115048582, 1.1200384801282894, 1.1171947678867764, 1.114421733000956, 1.1117172081334294, 1.1090791011523724, 1.1065053924345611, 1.1039941322516107, 1.1015434382390987, 1.0991514929478974, 1.0968165414767557, 1.0945368891849219, 1.092310899483407, 1.0901369917033155, 1.0880136390395456, 1.0859393665680503, 1.083912749334775, 1.081932410514327, 1.079997019636387, 1.078105290877856, 1.07625598141871, 1.0744478898595407, 1.0726798546987677, 1.070950752867525, 1.0692594983202535, 1.067605040679054, 1.0659863639299014, 1.0644024851688507, 1.0628524533964143, 1.061335348358332, 1.0598502794310054, 1.0583963845499114, 1.0569728291793665, 1.0555788053220563, 1.054213530566797, 1.0528762471730517, 1.0515662211907613, 1.0502827416141132, 1.0490251195679094, 1.0477926875252481, 1.046584798555277, 1.0454008255998284, 1.0442401607777796, 1.0431022147160394, 1.0419864159060916, 1.0408922100850768, 1.039819059640428, 1.0387664430371149, 1.0377338542665946, 1.0367208023165932, 1.035726810660886, 1.034751416768273, 1.0337941716299823, 1.0328546393047597, 1.0319323964809404, 1.0310270320548205, 1.0301381467246797, 1.0292653525998288, 1.0284082728240833, 1.027566541213092, 1.0267398019049652, 1.0259277090236794, 1.0251299263547504, 1.024346127032691, 1.0235759932397877, 1.0228192159157516, 1.0220754944778163, 1.0213445365508733, 1.0206260577072526, 1.0199197812157712, 1.0192254377996932, 1.0185427654032477, 1.0178715089663821, 1.017211420207426, 1.0165622574133653, 1.0159237852374317, 1.0152957745037285, 1.014678002018625, 1.014070250388658, 1.013472307844699, 1.0128839680721444, 1.0123050300469048, 1.0117352978769731, 1.0111745806493637, 1.0106226922822212, 1.010079451381904, 1.0095446811048616, 1.009018209024124, 1.0084998670002359, 1.007989491056469, 1.007486921258159, 1.0069920015960117, 1.0065045798732386, 1.0060245075963774, 1.005551639869669, 1.005085835292858, 1.0046269558622964, 1.0041748668752313, 1.0037294368371608, 1.003290537372152, 1.002858043136013, 1.0024318317322194, 1.002011783630497, 1.0015977820879682, 1.001189713072772, 1.0007874651900706, 1.0003909296103588, 1.0]
        
        
        PlotView(byteArray1: array1)
            .frame(width:300, height: 300)
    }
}
